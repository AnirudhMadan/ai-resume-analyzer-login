{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup, signOut } from 'firebase/auth';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBfzz5sH6o-YEFMD_4CLap6TsKfYz_2vEI\",\n  authDomain: \"resume-ats-8fe79.firebaseapp.com\",\n  projectId: \"resume-ats-8fe79\",\n  storageBucket: \"resume-ats-8fe79.appspot.com\",\n  messagingSenderId: \"1022501902201\",\n  appId: \"1:1022501902201:web:c12f687c725917d07a01a8\",\n  measurementId: \"G-TPWP6HK17N\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\n// Initialize Firebase Auth\nexport const auth = getAuth(app);\n\n// Google Provider\nexport const googleProvider = new GoogleAuthProvider();\n\n// Auth Functions\nexport const registerWithEmail = async (email, password) => {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    return userCredential.user;\n  } catch (error) {\n    console.error(\"Email Sign Up Error:\", error.message);\n    throw error;\n  }\n};\nexport const loginWithEmail = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    return userCredential.user;\n  } catch (error) {\n    console.error(\"Email Sign In Error:\", error.message);\n    throw error;\n  }\n};\nexport const signInWithGoogle = async () => {\n  try {\n    const result = await signInWithPopup(auth, googleProvider);\n    return result.user;\n  } catch (error) {\n    console.error(\"Google Sign In Error:\", error.message);\n    throw error;\n  }\n};\nexport const logout = async () => {\n  try {\n    await signOut(auth);\n  } catch (error) {\n    console.error(\"Logout Error:\", error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["initializeApp","getAnalytics","getAuth","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","signOut","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","analytics","auth","googleProvider","registerWithEmail","email","password","userCredential","user","error","console","message","loginWithEmail","signInWithGoogle","result","logout"],"sources":["C:/Users/anima/OneDrive/Desktop/Vyoma Web App cursor/src/firebase.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport {\n  getAuth,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signInWithPopup,\n  signOut\n} from 'firebase/auth';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBfzz5sH6o-YEFMD_4CLap6TsKfYz_2vEI\",\n  authDomain: \"resume-ats-8fe79.firebaseapp.com\",\n  projectId: \"resume-ats-8fe79\",\n  storageBucket: \"resume-ats-8fe79.appspot.com\",\n  messagingSenderId: \"1022501902201\",\n  appId: \"1:1022501902201:web:c12f687c725917d07a01a8\",\n  measurementId: \"G-TPWP6HK17N\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\n// Initialize Firebase Auth\nexport const auth = getAuth(app);\n\n// Google Provider\nexport const googleProvider = new GoogleAuthProvider();\n\n// Auth Functions\nexport const registerWithEmail = async (email, password) => {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    return userCredential.user;\n  } catch (error) {\n    console.error(\"Email Sign Up Error:\", error.message);\n    throw error;\n  }\n};\n\nexport const loginWithEmail = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    return userCredential.user;\n  } catch (error) {\n    console.error(\"Email Sign In Error:\", error.message);\n    throw error;\n  }\n};\n\nexport const signInWithGoogle = async () => {\n  try {\n    const result = await signInWithPopup(auth, googleProvider);\n    return result.user;\n  } catch (error) {\n    console.error(\"Google Sign In Error:\", error.message);\n    throw error;\n  }\n};\n\nexport const logout = async () => {\n  try {\n    await signOut(auth);\n  } catch (error) {\n    console.error(\"Logout Error:\", error.message);\n    throw error;\n  }\n};"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SACEC,OAAO,EACPC,kBAAkB,EAClBC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,eAAe,EACfC,OAAO,QACF,eAAe;;AAEtB;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,kCAAkC;EAC9CC,SAAS,EAAE,kBAAkB;EAC7BC,aAAa,EAAE,8BAA8B;EAC7CC,iBAAiB,EAAE,eAAe;EAClCC,KAAK,EAAE,4CAA4C;EACnDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGhB,aAAa,CAACQ,cAAc,CAAC;AACzC,MAAMS,SAAS,GAAGhB,YAAY,CAACe,GAAG,CAAC;;AAEnC;AACA,OAAO,MAAME,IAAI,GAAGhB,OAAO,CAACc,GAAG,CAAC;;AAEhC;AACA,OAAO,MAAMG,cAAc,GAAG,IAAIhB,kBAAkB,CAAC,CAAC;;AAEtD;AACA,OAAO,MAAMiB,iBAAiB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EAC1D,IAAI;IACF,MAAMC,cAAc,GAAG,MAAMnB,8BAA8B,CAACc,IAAI,EAAEG,KAAK,EAAEC,QAAQ,CAAC;IAClF,OAAOC,cAAc,CAACC,IAAI;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACpD,MAAMF,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMG,cAAc,GAAG,MAAAA,CAAOP,KAAK,EAAEC,QAAQ,KAAK;EACvD,IAAI;IACF,MAAMC,cAAc,GAAG,MAAMlB,0BAA0B,CAACa,IAAI,EAAEG,KAAK,EAAEC,QAAQ,CAAC;IAC9E,OAAOC,cAAc,CAACC,IAAI;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACpD,MAAMF,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMI,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMxB,eAAe,CAACY,IAAI,EAAEC,cAAc,CAAC;IAC1D,OAAOW,MAAM,CAACN,IAAI;EACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACrD,MAAMF,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMM,MAAM,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACF,MAAMxB,OAAO,CAACW,IAAI,CAAC;EACrB,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACE,OAAO,CAAC;IAC7C,MAAMF,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}